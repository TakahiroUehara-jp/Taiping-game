# -*- coding: utf-8 -*-
"""
Created on Thu Jan 16 18:23:48 2025

@author: owner
"""

import tkinter as tk
import pygame
import sys
import random
from pygame.locals import *

#色の定義
WHITE = (255,255,255)
BLACK = (0,0,0)
RED   = (255,0,0)
CYAN  = (0,255,255)

#画像の読み込み
title = pygame.image.load("picture\\Tittle Screan(2).png")#770×769
player = pygame.image.load("picture\\player.png")
wall = pygame.image.load("picture\\wall.png")
floor = pygame.image.load("picture\\floor.png")
door = pygame.image.load("picture\\door.png")
btlbg = pygame.image.load("picture\\btlbg(2).png")

enemy1 = pygame.image.load("picture\\enemy lv1.png")
enemy2 = pygame.image.load("picture\\enemy lv2.png")
enemy3 = pygame.image.load("picture\\enemy lv3.png")
enemy4 = pygame.image.load("picture\\enemy lv4.png")
enemy5 = pygame.image.load("picture\\enemy lv5.png")

Enemy1 = pygame.image.load("picture\\enemy lv1 (2).png")
Enemy2 = pygame.image.load("picture\\enemy lv2 (2).png")
Enemy3 = pygame.image.load("picture\\enemy lv3 (2).png")
Enemy4 = pygame.image.load("picture\\enemy lv4 (2).png")
Enemy5 = pygame.image.load("picture\\enemy lv5 (2).png")

key1 = pygame.image.load("picture\\key1.png")
key2 = pygame.image.load("picture\\key2.png")
key3 = pygame.image.load("picture\\key3.png")
key4 = pygame.image.load("picture\\key4.png")

#変数の宣言
pl_x, pl_y = 5, 9  # プレイヤーの初期タイル座標
idx = 0  # ゲーム状態
tmr = 0  # タイマー
stage = 0
welcome = 0
key = 0
check = 0
emy_name =""
emy_life = 0
emy_lifemax = 30
emy_blink = 0
emy_x = 0 
emy_y = 0
dmg_eff = 0

pl_lifemax = 0
pl_life = 0

Enemies = [Enemy1,Enemy2,Enemy3,Enemy4,Enemy5]#floor 小さい画像
enemies = [enemy1,enemy2,enemy3,enemy4,enemy5]#battle 大きい画像


dic_word1 = {
    'リンゴ': ['r', 'i', 'n', 'g', 'o'],
    'かがみ': ['k', 'a', 'g', 'a', 'm', 'i'],
    'こおり': ['k', 'o', 'o', 'r', 'i'],
    'ふうせん': ['h', 'u', 'u', 's', 'e', 'n', 'n'],
    'さがしもの': ['s', 'a', 'g', 'a', 's', 'i', 'm', 'o', 'n', 'o'],
    '奈落の底': ['n', 'a', 'r', 'a', 'k', 'u', 'n', 'o', 's', 'o', 'k', 'o']
}

dic_word2 = {
    'ゆきだるま': ['y', 'u', 'k', 'i', 'd', 'a', 'r', 'u', 'm', 'a'],
    '海水浴': ['k', 'a', 'i', 's', 'u', 'i', 'y', 'o', 'k', 'u'],
    '疫病神': ['y', 'a', 'k', 'u', 'b', 'y', 'o', 'u', 'g', 'a', 'm', 'i'],
    'あうんの呼吸': ['a', 'u', 'n', 'n', 'n', 'o', 'k', 'o', 'k', 'y', 'u'],
    '行き当たりばったり': ['i', 'k', 'i', 'a', 't', 'a', 'r', 'i', 'b', 'a', 't', 't', 'a', 'r', 'i'],
    '馬の耳に念仏': ['u', 'm', 'a', 'n', 'm', 'i', 'm', 'i', 'n', 'i', 'n', 'e', 'n', 'b', 'u', 't', 'u']
}

dic_word3 = {'りんご':['r','i','n','g','o'],'ラーメン':['r','a','-','m','e','n']}
dic_word4 = {'りんご':['r','i','n','g','o'],'ラーメン':['r','a','-','m','e','n']}

# フロアマップ（0: 床, 1: 壁, 2: ドア, 3: 敵）
floor_map = [
    [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
]

def draw_floor(screen):
    global stage
    Enemy = Enemies[stage]
    for y, row in enumerate(floor_map):
        for x, tile in enumerate(row):
            X, Y = x * 70, y * 70
            if tile == 0:
                screen.blit(floor, (X, Y))
            elif tile == 1:
                screen.blit(wall, (X, Y))
            elif tile == 2:
                screen.blit(door, (X, Y))
            #敵の描画
            if x == 5 and y == 2:
                screen.blit(Enemy, (X, Y))
            # プレイヤーの描画
            if x == pl_x and y == pl_y:
                screen.blit(player, (X, Y))


def draw_text(screen, text, x, y, font, color):
    """テキストの描画"""
    surface = font.render(text, True, color)
    screen.blit(surface, (x, y))


def draw_bar(screen, x, y, width, height, current, maximum):
    ratio = current / maximum
    # ゲージの枠を描画
    pygame.draw.rect(screen, WHITE, (x, y, width, height), 2)  # 白い枠
    fill_width = int(width * ratio)  # 現在の比率で幅を決定
    if ratio > 0.5:
        color = (0, 255, 0)  # 緑（HPが半分以上）
    elif ratio > 0.2:
        color = (255, 255, 0)  # 黄色（HPが少ない）
    else:
        color = (255, 0, 0)  # 赤（HPが非常に少ない）
    pygame.draw.rect(screen, color, (x, y, fill_width, height))  # 塗りつぶし


def draw_para(screen, font):    # プレイヤーの能力を表示
    draw_text(screen, f"HP: {pl_life}/{pl_lifemax}", 20, 20, font, WHITE)


def init_battle():
    global emy_name,emy_lifemax,emy_life,emy_x,emy_y,stage
    enemy = enemies[stage-1]
    emy_life = emy_lifemax
    emy_lifemax = stage*100                                                           #仮設定
    emy_name = 'enemy lv' + str(stage)
    emy_x = 440-enemies.get_width()/2
    emy_y = 560-enemies.get_height()


def draw_battle(screen, font):
    global emy_blink, dmg_eff
    bx = 0
    by = 60
    if dmg_eff > 0:
        dmg_eff = dmg_eff - 1
        bx = random.randint(-20, 20)
        by = random.randint(-10, 10)
    screen.blit(btlbg, [bx, by])
    if emy_life > 0 and emy_blink%2 == 0:
        screen.blit(enemies[stage-1], [emy_x, emy_y+emy_step])
    draw_bar(screen, 340, 580, 200, 10, emy_life, emy_lifemax)
    if emy_blink > 0:
        emy_blink = emy_blink - 1
    draw_para(screen, font) # 主人公の能力を表示


def new_target():
    global target, answer, current_index, user_input, check
    target = random.choice(list(dic_word1.keys()))  # 新しい単語を選択
    answer = dic_word1[target]
    current_index = 0
    user_input = ""
    check = 0


def check_answer():
    global target, answer, current_index, check, user_input
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.unicode:  # 有効な文字入力の場合
                if event.unicode == answer[current_index]:  # 現在の正解文字と一致する場合
                    user_input += event.unicode
                    current_index += 1
                    if current_index == len(answer):  # 全て正解した場合
                        check = 1
                    else:
                        check = 2  # 間違えた場合

    
    if user_input == answer[current_index]:# 入力が現在の正解と一致する場合
        draw_text(screen, user_input, 30, 30, font, BLACK)
        current_index += 1  # 次の文字へ
        if current_index == len(answer):  # 全て正解した場合
            check = 0
    else:
        check = 1


def main():
    global idx, tmr, pl_x, pl_y,pl_life, enemy_life, dmg
    pygame.init()
    pygame.display.set_caption("Typing Game")
    screen = pygame.display.set_mode((770, 700))
    #ディスプレイのサイズ
    clock = pygame.time.Clock()
    font = pygame.font.Font("ipaexm.ttf", 40)

    while True:
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()

        tmr += 1
        screen.fill(BLACK)

        if idx == 0:  # タイトル画面
            screen.blit(title, (30, 5))
            draw_text(screen, "Press SPACE to Start", 190, 260, font, CYAN)
            keys = pygame.key.get_pressed()
            if keys[K_SPACE]:
                idx = 1
                tmr = 0

        elif idx == 1:  # ゲーム画面（フロア探索）
            draw_floor(screen)
            keys = pygame.key.get_pressed()
            if keys[K_UP] and floor_map[pl_y - 1][pl_x] != 1:
                pl_y -= 1
            elif keys[K_DOWN] and floor_map[pl_y + 1][pl_x] != 1:
                pl_y += 1
            elif keys[K_LEFT] and floor_map[pl_y][pl_x - 1] != 1:
                pl_x -= 1
            elif keys[K_RIGHT] and floor_map[pl_y][pl_x + 1] != 1:
                pl_x += 1
                
            if pl_x == 5 and pl_y == 2:
                idx = 2
                tmr = 0
                

        elif idx == 2:  # 戦闘画面
            if tmr == 1:
                draw_battle(screen, font)
                init_battle(screen)
                init_message()
                keys = pygame.key.get_pressed()
            elif tmr <= 4:
                bx = (4-tmr)*220
                by = 0
                screen.blit(btlbg, [bx, by])
                draw_text(screen, "Encounter!", 350, 200, font, WHITE)
            elif tmr <= 16:
                draw_battle(screen, fontS)
                draw_text(screen, emy_name+" appear!", 300, 200, font, WHITE)
            else:
                idx = 3
                tmr = 0
        
                
        elif idx == 3:# プレイヤーのターン（入力待ち）
            draw_battle(screen)
            if tmr == 1: 
                set_message("文字を入力")
            if tmr == 15:
                user_input = entry.get()
                draw_text(screen, target, 30, 30, font, BLACK)
                draw_text(screen, user_input, 30, 70, font, BLACK)
                check_answer()
                
                if check == 1:
                    idx = 4
                if check == 2:
                    idx = 5


        elif idx == 4: # プレイヤーの攻撃
            draw_battle(screen)
            if tmr == 1:
                dmg = mojisuu                                                #mojisuuはタイピングの記述がないため仮置き
            if 2 <= tmr and tmr <= 4:
                screen.blit(imgEffect[0], [700-tmr*120, -100+tmr*120])
            if tmr == 5:
                emy_blink = 5
                set_message(str(dmg)+"pts of damage!")
            if tmr == 11:
                enemy_life = enemy_life - dmg
                if enemy_life <= 0:
                    enemy_life = 0
                    idx = 6
                    tmr = 0
            if tmr == 16:
                idx = 3
                tmr = 0
            if enemy_life <= 0: # 敵を倒したらフロア画面に戻る
                enemy_life = 10  # 敵のHPをリセット
                idx = 1

        elif idx == 5: # 敵の攻撃
            draw_battle(screen)
            if tmr == 1:
                set_message("ミス!")
            if tmr == 5:
                set_message(emy_name + "に攻撃された！")
                emy_step = 30
            if tmr == 9:
                dmg = emy_str + random.randint(0, 9)
                set_message(str(dmg)+"ダメージ!")
                dmg_eff = 5
                emy_step = 0
            if tmr == 15:
                pl_life = pl_life - dmg
                if pl_life < 0:
                    pl_life = 0
                    idx = 7
                    tmr = 0
            if tmr == 20:
                idx = 3
                tmr = 0
       
        
        elif idx == 6: #勝利"  
           if tmr == 1:
               set_message("～"+"your life recovered")
               if pl_life <= 90:
                   pl_life = pl_life + 10
           if tmr == 20:
               set_message("扉のカギを入手しました")
               keys = keys + 1
           if tmr == 28:
              idx = 1
              tmr = 0
               
        elif idx == 7: #敗北
            if tmr == 1:
                set_messeage("やられてしまった！")
            if tmr == 11:
                idx = 8
                tmr = 29
        
        elif idx == 8: #ゲームオーバー
            if tmr <= 30:
                draw_text(screen,"You Lose",360,240,font,RED)
                draw_text(screen,"Game Over",360,380,font,RED)
            elif tmr == 100: 
                idx = 0
                tmr = 0

            
        pygame.display.update()
        clock.tick(30)

if __name__ == "__main__":
    main()
